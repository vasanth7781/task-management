[{"/home/vasanth/Desktop/devza_new/my-app/src/Task/TaskLanding.tsx":"1","/home/vasanth/Desktop/devza_new/my-app/src/Task/TaskHeader/TaskHeader.tsx":"2","/home/vasanth/Desktop/devza_new/my-app/src/Task/ViewTasks/ViewTasksLanding.tsx":"3","/home/vasanth/Desktop/devza_new/my-app/src/Task/constant.ts":"4","/home/vasanth/Desktop/devza_new/my-app/src/Task/CreateTask/index.ts":"5","/home/vasanth/Desktop/devza_new/my-app/src/Task/CreateTask/CreateTaskLanding.tsx":"6","/home/vasanth/Desktop/devza_new/my-app/src/Task/CreateTask/CreateTasksFormsLanding.tsx":"7","/home/vasanth/Desktop/devza_new/my-app/src/App.tsx":"8","/home/vasanth/Desktop/devza_new/my-app/src/Task/index.ts":"9","/home/vasanth/Desktop/devza_new/my-app/src/Task/TaskHeader/index.ts":"10","/home/vasanth/Desktop/devza_new/my-app/src/Task/CreateTask/ListUsersForTaskSelect.tsx":"11","/home/vasanth/Desktop/devza_new/my-app/src/services/requests.ts":"12","/home/vasanth/Desktop/devza_new/my-app/src/hooks/withTaskHooks.ts":"13","/home/vasanth/Desktop/devza_new/my-app/src/services/task/task.ts":"14","/home/vasanth/Desktop/devza_new/my-app/src/constant.ts":"15","/home/vasanth/Desktop/devza_new/my-app/src/hooks/withUserHooks.ts":"16","/home/vasanth/Desktop/devza_new/my-app/src/Components/TaskPanelHeader/TaskPanelHeader.tsx":"17","/home/vasanth/Desktop/devza_new/my-app/src/Components/TaskPanelBody/TaskPanelBody.tsx":"18","/home/vasanth/Desktop/devza_new/my-app/src/Components/TaskPanelHeader/index.ts":"19","/home/vasanth/Desktop/devza_new/my-app/src/Task/taskUtilities.ts":"20","/home/vasanth/Desktop/devza_new/my-app/src/Task/ViewTasks/SortTasks/SortTaskLanding.tsx":"21","/home/vasanth/Desktop/devza_new/my-app/src/Components/TaskPanelBody/index.ts":"22","/home/vasanth/Desktop/devza_new/my-app/src/Task/ViewTasks/TaskPanelWrapper/TaskPanelWrapper.tsx":"23","/home/vasanth/Desktop/devza_new/my-app/src/index.tsx":"24","/home/vasanth/Desktop/devza_new/my-app/src/services/users/user.ts":"25","/home/vasanth/Desktop/devza_new/my-app/src/Task/ViewTasks/SortTasks/index.ts":"26","/home/vasanth/Desktop/devza_new/my-app/src/Task/ViewTasks/TaskPanelWrapper/index.ts":"27","/home/vasanth/Desktop/devza_new/my-app/src/Task/CreateTask/ListsPriorityForTaskSelect.tsx":"28","/home/vasanth/Desktop/devza_new/my-app/src/reportWebVitals.ts":"29","/home/vasanth/Desktop/devza_new/my-app/src/Task/ViewTasks/index.ts":"30"},{"size":1885,"mtime":1612062857204,"results":"31","hashOfConfig":"32"},{"size":948,"mtime":1612072261110,"results":"33","hashOfConfig":"32"},{"size":7306,"mtime":1612072254638,"results":"34","hashOfConfig":"32"},{"size":1266,"mtime":1612072183902,"results":"35","hashOfConfig":"32"},{"size":86,"mtime":1611985138688,"results":"36","hashOfConfig":"32"},{"size":2667,"mtime":1612072275813,"results":"37","hashOfConfig":"32"},{"size":1383,"mtime":1612072272297,"results":"38","hashOfConfig":"32"},{"size":259,"mtime":1612072148103,"results":"39","hashOfConfig":"32"},{"size":68,"mtime":1611934331166,"results":"40","hashOfConfig":"32"},{"size":65,"mtime":1611943074845,"results":"41","hashOfConfig":"32"},{"size":1627,"mtime":1612072265034,"results":"42","hashOfConfig":"32"},{"size":7203,"mtime":1612069373919,"results":"43","hashOfConfig":"32"},{"size":435,"mtime":1612072290125,"results":"44","hashOfConfig":"32"},{"size":985,"mtime":1612069365855,"results":"45","hashOfConfig":"32"},{"size":376,"mtime":1612072139935,"results":"46","hashOfConfig":"32"},{"size":275,"mtime":1612072293685,"results":"47","hashOfConfig":"32"},{"size":696,"mtime":1612072299529,"results":"48","hashOfConfig":"32"},{"size":563,"mtime":1612072304457,"results":"49","hashOfConfig":"32"},{"size":80,"mtime":1612004461890,"results":"50","hashOfConfig":"32"},{"size":1676,"mtime":1612066730084,"results":"51","hashOfConfig":"32"},{"size":1290,"mtime":1612072246958,"results":"52","hashOfConfig":"32"},{"size":74,"mtime":1612004550634,"results":"53","hashOfConfig":"32"},{"size":1690,"mtime":1612072234282,"results":"54","hashOfConfig":"32"},{"size":500,"mtime":1611982980097,"results":"55","hashOfConfig":"32"},{"size":350,"mtime":1612003599265,"results":"56","hashOfConfig":"32"},{"size":80,"mtime":1612010507148,"results":"57","hashOfConfig":"32"},{"size":83,"mtime":1612010852681,"results":"58","hashOfConfig":"32"},{"size":866,"mtime":1612072268877,"results":"59","hashOfConfig":"32"},{"size":425,"mtime":1611982980097,"results":"60","hashOfConfig":"32"},{"size":83,"mtime":1611983886853,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"12upbj7",{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"72"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"75"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"75"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"75"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},"/home/vasanth/Desktop/devza_new/my-app/src/Task/TaskLanding.tsx",["131"],"/home/vasanth/Desktop/devza_new/my-app/src/Task/TaskHeader/TaskHeader.tsx",["132"],"/home/vasanth/Desktop/devza_new/my-app/src/Task/ViewTasks/ViewTasksLanding.tsx",["133","134","135"],"/home/vasanth/Desktop/devza_new/my-app/src/Task/constant.ts",[],"/home/vasanth/Desktop/devza_new/my-app/src/Task/CreateTask/index.ts",[],["136","137"],"/home/vasanth/Desktop/devza_new/my-app/src/Task/CreateTask/CreateTaskLanding.tsx",[],["138","139"],"/home/vasanth/Desktop/devza_new/my-app/src/Task/CreateTask/CreateTasksFormsLanding.tsx",["140","141","142","143","144"],"/home/vasanth/Desktop/devza_new/my-app/src/App.tsx",[],"/home/vasanth/Desktop/devza_new/my-app/src/Task/index.ts",[],["145","146"],"/home/vasanth/Desktop/devza_new/my-app/src/Task/TaskHeader/index.ts",[],["147","148"],"/home/vasanth/Desktop/devza_new/my-app/src/Task/CreateTask/ListUsersForTaskSelect.tsx",[],"/home/vasanth/Desktop/devza_new/my-app/src/services/requests.ts",["149","150","151","152","153"],"/home/vasanth/Desktop/devza_new/my-app/src/hooks/withTaskHooks.ts",["154","155"],"/home/vasanth/Desktop/devza_new/my-app/src/services/task/task.ts",["156","157"],"import { API_ROOT, GET_REQUEST_NAME, POST_REQUEST_NAME, API_KEY, AUTH_HEADER_NAME, PUT_REQUEST_NAME } from 'constant';\nimport Request, {setData, setHeaders, setMethod, setParams, setURL } from 'services/requests';\n\nexport const listAllTask = () =>\n  Request(setURL(`${API_ROOT}/tasks/list`), setMethod(GET_REQUEST_NAME), setHeaders({ [AUTH_HEADER_NAME]: API_KEY }));\n\nexport const createTask = (taskData: any) =>\n  Request(\n    setURL(`${API_ROOT}/tasks/create`),\n    setMethod(POST_REQUEST_NAME),\n    setHeaders({ [AUTH_HEADER_NAME]: API_KEY }),\n    setData(taskData),\n  );\n\nexport const updateTask = (taskData: any) =>\n  Request(\n    setURL(`${API_ROOT}/tasks/update`),\n    setMethod(POST_REQUEST_NAME),\n    setData(taskData),\n    setHeaders({ [AUTH_HEADER_NAME]: API_KEY })\n  );\n\nexport const deleteTask = (taskId: any) =>\n  Request(\n    setURL(`${API_ROOT}/tasks/delete`),\n    setMethod(POST_REQUEST_NAME),\n    setData(taskId),\n    setHeaders({ [AUTH_HEADER_NAME]: API_KEY })\n  );\n","/home/vasanth/Desktop/devza_new/my-app/src/constant.ts",[],"/home/vasanth/Desktop/devza_new/my-app/src/hooks/withUserHooks.ts",["158","159"],"/home/vasanth/Desktop/devza_new/my-app/src/Components/TaskPanelHeader/TaskPanelHeader.tsx",[],"/home/vasanth/Desktop/devza_new/my-app/src/Components/TaskPanelBody/TaskPanelBody.tsx",[],"/home/vasanth/Desktop/devza_new/my-app/src/Components/TaskPanelHeader/index.ts",[],"/home/vasanth/Desktop/devza_new/my-app/src/Task/taskUtilities.ts",["160"],"import { always, cond, equals, sort, sortWith,ascend,prop,pathOr,descend, map, keys, values, join, includes } from \"ramda\"\nimport { SORT_BY_NEWEST, SORT_BY_OLDEST, TAKS_PIRORITY_MAPPER } from \"./constant\"\n\nexport const getIconNameBySort = (sortOption: string) => {\n    return cond<any,any>([\n        [equals(SORT_BY_NEWEST),always('sort-alpha-asc')],\n        [equals(SORT_BY_OLDEST),always('sort-alpha-desc')],\n    ])(sortOption)\n}\n\nexport const handleSortSelection = (sortValue: any, priority: string,taskData:any) => {\n    return cond<any, any>([\n      [\n        equals(SORT_BY_NEWEST),\n        () => sortWith([descend(prop('created_on'))], pathOr([], [TAKS_PIRORITY_MAPPER[priority]], taskData))\n      ],\n      [\n        equals(SORT_BY_OLDEST),\n        () => sortWith([ascend(prop('created_on'))], pathOr([], [TAKS_PIRORITY_MAPPER[priority]], taskData))\n      ]\n    ])(sortValue);\n};\nexport const mappedUserData = (users: any) => {\n    const userMapForSelctionFn = (user: any) => {\n        return {label:pathOr('',['name'],user),value:pathOr('',['id'],user),role:'Users',...user}\n    }\n    return map(userMapForSelctionFn,users)\n}\n\nexport const convJsonToBodyData = (json: any) => {\n    const keysOfTasks = keys(json);\n    const valuesOfTasks = values(json);\n    const listOfTasksData: string[] = [];\n    keysOfTasks &&\n      keysOfTasks.map((key: any, index: number) => {\n        return listOfTasksData.push(`${key}=${valuesOfTasks[index]}`);\n      });\n    return join('&', listOfTasksData)\n}\n\nexport const chkSuccesResponse = (response: any) => includes('success', values(response))\nexport const chkErrorResponse = (response: any) => includes('error', values(response))\n\n","/home/vasanth/Desktop/devza_new/my-app/src/Task/ViewTasks/SortTasks/SortTaskLanding.tsx",[],"/home/vasanth/Desktop/devza_new/my-app/src/Components/TaskPanelBody/index.ts",[],"/home/vasanth/Desktop/devza_new/my-app/src/Task/ViewTasks/TaskPanelWrapper/TaskPanelWrapper.tsx",["161","162","163"],"import TaskPanelBody from 'Components/TaskPanelBody';\nimport TaskPanelHeader from 'Components/TaskPanelHeader';\nimport { equals, filter, head, pathOr } from 'ramda';\nimport React from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { Icon } from 'rsuite';\n\ninterface TaskPanelWrapperProps {\n  data: any;\n  users: any;\n  index: number;\n}\nconst TaskPanelWrapper: React.FC<TaskPanelWrapperProps> = (props: TaskPanelWrapperProps) => {\n  const { data, users } = props;\n  const filterCurrentUser = head(\n    filter((user: any) => equals(pathOr('', ['id'], user), pathOr('', ['assigned_to'], data)), users)\n  );\n  return (\n    <div>\n      {data && (\n        <Draggable draggableId={`${props.index}`} index={props.index}>\n          {(provided: any, snapShot: any) => {\n            return (\n              <div\n                ref={provided.innerRef}\n                isDragging={snapShot.isDragging}\n                {...provided.draggableProps}\n                {...provided.dragHandleProps}\n              >\n                <div className={'task__pheader'} style={{ height: '45px' }}>\n                  <TaskPanelHeader\n                    img={pathOr('', ['picture'], filterCurrentUser)}\n                    name={pathOr('', ['name'], filterCurrentUser)}\n                  />\n                </div>\n                <div className={'mt-4 task__pbody'} style={{ height: '100px' }}>\n                  <TaskPanelBody message={pathOr('', ['message'], data)} createdAt={pathOr('', ['created_on'], data)} />\n                </div>\n              </div>\n            );\n          }}\n        </Draggable>\n      )}\n    </div>\n  );\n};\nexport default TaskPanelWrapper;\n","/home/vasanth/Desktop/devza_new/my-app/src/index.tsx",[],"/home/vasanth/Desktop/devza_new/my-app/src/services/users/user.ts",["164"],"import { API_ROOT, GET_REQUEST_NAME,API_KEY,AUTH_HEADER_NAME } from 'constant';\nimport Request, {\n  setHeaders,\n  setMethod,\n  setParams,\n  setURL,\n} from 'services/requests';\n\nexport const listAllUsers = () =>\nRequest(\n    setURL(`${API_ROOT}/tasks/listusers`),\n    setMethod(GET_REQUEST_NAME),\n    setHeaders({ [AUTH_HEADER_NAME]: API_KEY })\n    );","/home/vasanth/Desktop/devza_new/my-app/src/Task/ViewTasks/SortTasks/index.ts",[],"/home/vasanth/Desktop/devza_new/my-app/src/Task/ViewTasks/TaskPanelWrapper/index.ts",[],["165","166"],"/home/vasanth/Desktop/devza_new/my-app/src/Task/CreateTask/ListsPriorityForTaskSelect.tsx",["167"],"/home/vasanth/Desktop/devza_new/my-app/src/reportWebVitals.ts",[],"/home/vasanth/Desktop/devza_new/my-app/src/Task/ViewTasks/index.ts",[],{"ruleId":"168","severity":1,"message":"169","line":35,"column":8,"nodeType":"170","endLine":35,"endColumn":10,"suggestions":"171"},{"ruleId":"172","severity":1,"message":"173","line":11,"column":11,"nodeType":"174","messageId":"175","endLine":11,"endColumn":20},{"ruleId":"172","severity":1,"message":"176","line":3,"column":18,"nodeType":"174","messageId":"175","endLine":3,"endColumn":25},{"ruleId":"168","severity":1,"message":"177","line":27,"column":6,"nodeType":"170","endLine":27,"endColumn":44,"suggestions":"178"},{"ruleId":"168","severity":1,"message":"179","line":27,"column":7,"nodeType":"180","endLine":27,"endColumn":43},{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","replacedBy":"184"},{"ruleId":"181","replacedBy":"185"},{"ruleId":"183","replacedBy":"186"},{"ruleId":"172","severity":1,"message":"187","line":1,"column":10,"nodeType":"174","messageId":"175","endLine":1,"endColumn":16},{"ruleId":"172","severity":1,"message":"188","line":3,"column":65,"nodeType":"174","messageId":"175","endLine":3,"endColumn":78},{"ruleId":"172","severity":1,"message":"189","line":3,"column":80,"nodeType":"174","messageId":"175","endLine":3,"endColumn":86},{"ruleId":"172","severity":1,"message":"190","line":3,"column":88,"nodeType":"174","messageId":"175","endLine":3,"endColumn":100},{"ruleId":"172","severity":1,"message":"173","line":13,"column":28,"nodeType":"174","messageId":"175","endLine":13,"endColumn":37},{"ruleId":"181","replacedBy":"191"},{"ruleId":"183","replacedBy":"192"},{"ruleId":"181","replacedBy":"193"},{"ruleId":"183","replacedBy":"194"},{"ruleId":"172","severity":1,"message":"195","line":2,"column":20,"nodeType":"174","messageId":"175","endLine":2,"endColumn":36},{"ruleId":"172","severity":1,"message":"196","line":3,"column":10,"nodeType":"174","messageId":"175","endLine":3,"endColumn":17},{"ruleId":"172","severity":1,"message":"197","line":3,"column":19,"nodeType":"174","messageId":"175","endLine":3,"endColumn":24},{"ruleId":"198","severity":1,"message":"199","line":232,"column":14,"nodeType":"174","messageId":"200","endLine":232,"endColumn":32},{"ruleId":"172","severity":1,"message":"201","line":234,"column":4,"nodeType":"174","messageId":"175","endLine":234,"endColumn":22},{"ruleId":"172","severity":1,"message":"202","line":1,"column":10,"nodeType":"174","messageId":"175","endLine":1,"endColumn":18},{"ruleId":"203","severity":1,"message":"204","line":11,"column":1,"nodeType":"205","endLine":15,"endColumn":3},{"ruleId":"172","severity":1,"message":"206","line":1,"column":84,"nodeType":"174","messageId":"175","endLine":1,"endColumn":100},{"ruleId":"172","severity":1,"message":"207","line":2,"column":50,"nodeType":"174","messageId":"175","endLine":2,"endColumn":59},{"ruleId":"172","severity":1,"message":"202","line":1,"column":10,"nodeType":"174","messageId":"175","endLine":1,"endColumn":18},{"ruleId":"203","severity":1,"message":"204","line":8,"column":1,"nodeType":"205","endLine":11,"endColumn":3},{"ruleId":"172","severity":1,"message":"208","line":1,"column":32,"nodeType":"174","messageId":"175","endLine":1,"endColumn":36},{"ruleId":"172","severity":1,"message":"209","line":5,"column":10,"nodeType":"174","messageId":"175","endLine":5,"endColumn":25},{"ruleId":"172","severity":1,"message":"210","line":5,"column":27,"nodeType":"174","messageId":"175","endLine":5,"endColumn":36},{"ruleId":"172","severity":1,"message":"211","line":6,"column":10,"nodeType":"174","messageId":"175","endLine":6,"endColumn":14},{"ruleId":"172","severity":1,"message":"207","line":5,"column":3,"nodeType":"174","messageId":"175","endLine":5,"endColumn":12},{"ruleId":"181","replacedBy":"212"},{"ruleId":"183","replacedBy":"213"},{"ruleId":"172","severity":1,"message":"173","line":12,"column":28,"nodeType":"174","messageId":"175","endLine":12,"endColumn":37},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'handleTaskStateChange', 'taskCall', and 'userCall'. Either include them or remove the dependency array.","ArrayExpression",["214"],"@typescript-eslint/no-unused-vars","'taskState' is assigned a value but never used.","Identifier","unusedVar","'Divider' is defined but never used.","React Hook useEffect has missing dependencies: 'groupByData' and 'taskState'. Either include them or remove the dependency array.",["215"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","no-native-reassign",["216"],"no-negated-in-lhs",["217"],["216"],["217"],"'pathOr' is defined but never used.","'ButtonToolbar' is defined but never used.","'Button' is defined but never used.","'SelectPicker' is defined but never used.",["216"],["217"],["216"],["217"],"'AUTH_HEADER_NAME' is defined but never used.","'forEach' is defined but never used.","'isNil' is defined but never used.","@typescript-eslint/no-redeclare","'CancellableRequest' is already defined.","redeclared","'CancellableRequest' is assigned a value but never used.","'useState' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'PUT_REQUEST_NAME' is defined but never used.","'setParams' is defined but never used.","'sort' is defined but never used.","'DragDropContext' is defined but never used.","'Droppable' is defined but never used.","'Icon' is defined but never used.",["216"],["217"],{"desc":"218","fix":"219"},{"desc":"220","fix":"221"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [handleTaskStateChange, taskCall, userCall]",{"range":"222","text":"223"},"Update the dependencies array to be: [groupByData, taskState]",{"range":"224","text":"225"},[1379,1381],"[handleTaskStateChange, taskCall, userCall]",[1136,1174],"[groupByData, taskState]"]